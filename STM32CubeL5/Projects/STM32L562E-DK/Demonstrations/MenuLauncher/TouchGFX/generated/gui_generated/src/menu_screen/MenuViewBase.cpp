/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/menu_screen/MenuViewBase.hpp>
#include "BitmapDatabase.hpp"
#include <texts/TextKeysAndLanguages.hpp>
#include <touchgfx/Color.hpp>

MenuViewBase::MenuViewBase() :
    updateItemCallback(this, &MenuViewBase::updateItemCallbackHandler)
{
    background.setXY(0, 0);
    background.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_ID));

    menuScreensViewPort.setPosition(0, 40, 240, 200);

    menuScreens.setPosition(33, 11, 860, 140);
    menuScreens.setHorizontal(true);
    menuScreens.setCircular(true);
    menuScreens.setEasingEquation(touchgfx::EasingEquations::cubicEaseOut);
    menuScreens.setSwipeAcceleration(10);
    menuScreens.setDragAcceleration(10);
    menuScreens.setNumberOfItems(5);
    menuScreens.setPadding(0, 0);
    menuScreens.setSnapping(true);
    menuScreens.setDrawableSize(172, 0);
    menuScreens.setDrawables(menuScreensListItems, updateItemCallback);
    menuScreensViewPort.add(menuScreens);

    Informations.setPosition(0, 150, 240, 27);
    Informations.setVisible(false);
    Informations.setColor(touchgfx::Color::getColorFrom24BitRGB(200, 201, 198));
    Informations.setLinespacing(0);
    Informations.setTypedText(touchgfx::TypedText(T_SINGLEUSEID6));
    menuScreensViewPort.add(Informations);

    AudioPlayer.setPosition(0, 150, 240, 27);
    AudioPlayer.setVisible(false);
    AudioPlayer.setColor(touchgfx::Color::getColorFrom24BitRGB(200, 201, 198));
    AudioPlayer.setLinespacing(0);
    AudioPlayer.setTypedText(touchgfx::TypedText(T_SINGLEUSEID4));
    menuScreensViewPort.add(AudioPlayer);

    BLE.setPosition(0, 150, 240, 27);
    BLE.setVisible(false);
    BLE.setColor(touchgfx::Color::getColorFrom24BitRGB(200, 201, 198));
    BLE.setLinespacing(0);
    BLE.setTypedText(touchgfx::TypedText(T_SINGLEUSEID9));
    menuScreensViewPort.add(BLE);

    AI.setPosition(0, 150, 240, 27);
    AI.setVisible(false);
    AI.setColor(touchgfx::Color::getColorFrom24BitRGB(200, 201, 198));
    AI.setLinespacing(0);
    AI.setTypedText(touchgfx::TypedText(T_SINGLEUSEID3));
    menuScreensViewPort.add(AI);

    Measurements.setPosition(0, 150, 240, 27);
    Measurements.setVisible(false);
    Measurements.setColor(touchgfx::Color::getColorFrom24BitRGB(200, 201, 198));
    Measurements.setLinespacing(0);
    Measurements.setTypedText(touchgfx::TypedText(T_SINGLEUSEID5));
    menuScreensViewPort.add(Measurements);

    bkg_overlay.setXY(0, 0);
    bkg_overlay.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_OVERLAY_ID));

    moduleName.setPosition(0, 200, 240, 27);
    moduleName.setColor(touchgfx::Color::getColorFrom24BitRGB(63, 107, 146));
    moduleName.setLinespacing(0);
    moduleNameBuffer[0] = 0;
    moduleName.setWildcard(moduleNameBuffer);
    moduleName.setTypedText(touchgfx::TypedText(T_SINGLEUSEID2));

    add(background);
    add(menuScreensViewPort);
    add(bkg_overlay);
    add(moduleName);
}

void MenuViewBase::setupScreen()
{
    menuScreens.initialize();
    for (int i = 0; i < menuScreensListItems.getNumberOfDrawables(); i++)
    {
        menuScreensListItems[i].initialize();
    }
}

void MenuViewBase::updateItemCallbackHandler(touchgfx::DrawableListItemsInterface* items, int16_t containerIndex, int16_t itemIndex)
{
    if (items == &menuScreensListItems)
    {
        touchgfx::Drawable* d = items->getDrawable(containerIndex);
        MenuContainer* cc = (MenuContainer*)d;
        menuScreensUpdateItem(*cc, itemIndex);
    }
}
