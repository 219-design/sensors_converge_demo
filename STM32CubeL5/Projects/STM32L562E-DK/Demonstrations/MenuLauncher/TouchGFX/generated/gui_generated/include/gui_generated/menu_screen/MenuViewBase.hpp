/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef MENUVIEWBASE_HPP
#define MENUVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/menu_screen/MenuPresenter.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/containers/scrollers/ScrollList.hpp>
#include <gui/containers/MenuContainer.hpp>

#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
class MenuViewBase : public touchgfx::View<MenuPresenter>
{
public:
    MenuViewBase();
    virtual ~MenuViewBase() {}
    virtual void setupScreen();

    virtual void menuScreensUpdateItem(MenuContainer& item, int16_t itemIndex)
    {
        // Override and implement this function in Menu
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Image background;
    touchgfx::Container menuScreensViewPort;
    touchgfx::ScrollList menuScreens;
    touchgfx::DrawableListItems<MenuContainer, 6> menuScreensListItems;

    touchgfx::TextArea Informations;
    touchgfx::TextArea AudioPlayer;
    touchgfx::TextArea BLE;
    touchgfx::TextArea AI;
    touchgfx::TextArea Measurements;

    touchgfx::Image bkg_overlay;
    touchgfx::TextAreaWithOneWildcard moduleName;

    /*
     * Wildcard Buffers
     */
    static const uint16_t MODULENAME_SIZE = 20;
    touchgfx::Unicode::UnicodeChar moduleNameBuffer[MODULENAME_SIZE];

private:
    touchgfx::Callback<MenuViewBase, touchgfx::DrawableListItemsInterface*, int16_t, int16_t> updateItemCallback;
    void updateItemCallbackHandler(touchgfx::DrawableListItemsInterface* items, int16_t containerIndex, int16_t itemIndex);

};

#endif // MENUVIEWBASE_HPP
